#!/usr/bin/env node

/**
 * rst2mdown CLI
 * Copyright (c) 2012, Kitson P. Kelly (New BSD License)
 */

var fs = require("fs"),
	util = require("util"),
	rst2mdown = require("../");

var help = function(){
	var spawn = require("child_process").spawn,
		options = {
			cwd: process.cwd(),
			env: process.env,
			setsid: false,
			customFds: [0, 1, 2]
		};

	spawn("man", [ __dirname + "/../man/rst2mdown.1"], options);
};

var main = function(argv){
	var files = [],
		data = "",
		tokens,
		input,
		output;

	function getArg(){
		var arg = argv.shift();
		arg = arg.split("=");
		if(arg.length > 1){
			argv.unshift(arg.slice(1).join("="));
		}
		return arg[0];
	}

	while(argv.length){
		arg = getArg();
		switch(arg){
			case "-i":
			case "--input":
				input = argv.shift();
				break;
			case "-o":
			case "--output":
				output = argv.shift();
				break;
			case "-t":
			case "--tokens":
				tokens = true;
				break;
			case "-h":
			case "--help":
				return help();
			default:
				files.push(arg);
		}
	}

	if(!input){
		if(files.length <= 2){
			var stdin = process.stdin;

			stdin.setEncoding("utf8");
			stdin.resume();

			stdin.on("data", function(text){
				data += text;
			});

			stdin.on("end", write);

			return;
		}
		input = files.pop();
	}

	data = fs.readFileSync(input, "utf8");

	data = tokens ? JSON.stringify(rst2mdown.lexer(data)) : rst2mdown(data);

	if(!output){
		process.stdout.write(data + "\n");
	}else{
		fs.writeFileSync(output, data, "utf8");
	}
};

if (!module.parent) {
	process.title = "rst2mdown";
	main(process.argv.slice());
} else {
	module.exports = main;
}