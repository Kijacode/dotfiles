function _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
Copyright (c) 2018-2020 Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
import { styled } from '../styles/index.js';
export var StyledTreeItemList = styled('ul', function (_ref) {
  var $theme = _ref.$theme,
      $isChildNode = _ref.$isChildNode,
      _ref$$expanded = _ref.$expanded,
      $expanded = _ref$$expanded === void 0 ? true : _ref$$expanded;
  return {
    marginTop: 0,
    marginBottom: 0,
    marginLeft: $isChildNode ? $theme.sizing.scale800 : 0,
    marginRight: 0,
    overflow: 'auto',
    paddingTop: 0,
    paddingBottom: 0,
    paddingLeft: 0,
    paddingRight: 0,
    position: 'relative',
    display: $expanded ? 'block' : 'none'
  };
});
StyledTreeItemList.displayName = "StyledTreeItemList";
export var StyledTreeItem = styled('li', function (_ref2) {
  var $theme = _ref2.$theme,
      $isLeafNode = _ref2.$isLeafNode;
  return {
    cursor: $isLeafNode ? 'auto' : 'pointer',
    marginTop: 0,
    marginBottom: 0,
    marginLeft: 0,
    marginRight: 0,
    overflow: 'auto',
    paddingTop: 0,
    paddingBottom: 0,
    paddingLeft: 0,
    paddingRight: 0,
    position: 'relative'
  };
});
StyledTreeItem.displayName = "StyledTreeItem";
export var StyledItemContent = styled('div', function (_ref3) {
  var $theme = _ref3.$theme;
  return _objectSpread2({}, $theme.typography.font300, {
    alignItems: 'center',
    boxSizing: 'border-box',
    color: $theme.colors.primary,
    display: 'flex',
    marginTop: 0,
    marginBottom: 0,
    marginLeft: 0,
    marginRight: 0,
    ':hover': {
      backgroundColor: $theme.colors.mono300
    }
  });
});
StyledItemContent.displayName = "StyledItemContent";
export var StyledIconContainer = styled('div', function (_ref4) {
  var $theme = _ref4.$theme;
  return _objectSpread2({}, $theme.borders.border600, {
    alignItems: 'center',
    display: 'flex',
    justifyContent: 'center',
    marginTop: 0,
    marginBottom: 0,
    marginLeft: 0,
    marginRight: $theme.sizing.scale200
  });
});
StyledIconContainer.displayName = "StyledIconContainer";