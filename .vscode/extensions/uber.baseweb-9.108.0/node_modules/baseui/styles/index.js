"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ThemeProvider", {
  enumerable: true,
  get: function get() {
    return _themeProvider.default;
  }
});
Object.defineProperty(exports, "createThemedStyled", {
  enumerable: true,
  get: function get() {
    return _styled.createThemedStyled;
  }
});
Object.defineProperty(exports, "createThemedWithStyle", {
  enumerable: true,
  get: function get() {
    return _styled.createThemedWithStyle;
  }
});
Object.defineProperty(exports, "createThemedUseStyletron", {
  enumerable: true,
  get: function get() {
    return _styled.createThemedUseStyletron;
  }
});
Object.defineProperty(exports, "styled", {
  enumerable: true,
  get: function get() {
    return _styled.styled;
  }
});
Object.defineProperty(exports, "withStyle", {
  enumerable: true,
  get: function get() {
    return _styled.withStyle;
  }
});
Object.defineProperty(exports, "useStyletron", {
  enumerable: true,
  get: function get() {
    return _styled.useStyletron;
  }
});
Object.defineProperty(exports, "hexToRgb", {
  enumerable: true,
  get: function get() {
    return _util.hexToRgb;
  }
});
exports.ThemeConsumer = void 0;

var _themeProvider = _interopRequireWildcard(require("./theme-provider.js"));

var _styled = require("./styled.js");

var _util = require("./util.js");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/*
Copyright (c) 2018-2020 Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
var ThemeConsumer = _themeProvider.ThemeContext.Consumer;
exports.ThemeConsumer = ThemeConsumer;