"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _constants = require("./constants.js");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// handles the case where selected = 0
function isSelectedDefined(selected) {
  return Array.isArray(selected) || typeof selected === 'number';
}

function defaultStateReducer(type, nextState, currentState) {
  return nextState;
}

var StatefulContainer =
/*#__PURE__*/
function (_React$Component) {
  _inherits(StatefulContainer, _React$Component);

  function StatefulContainer(props) {
    var _this;

    _classCallCheck(this, StatefulContainer);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatefulContainer).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "changeState", function (nextState) {
      if (_this.props.stateReducer) {
        _this.setState(_this.props.stateReducer(_constants.STATE_CHANGE_TYPE.change, nextState, _this.state));
      } else {
        _this.setState(nextState);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onClick", function (event, index) {
      if (_this.props.mode === _constants.MODE.radio) {
        if (_this.state.selected.length === 0 || _this.state.selected[0] !== index) {
          _this.changeState({
            selected: [index]
          });
        } else {
          _this.changeState({
            selected: []
          });
        }
      }

      if (_this.props.mode === _constants.MODE.checkbox) {
        if (!_this.state.selected.includes(index)) {
          _this.changeState({
            selected: [].concat(_toConsumableArray(_this.state.selected), [index])
          });
        } else {
          _this.changeState({
            selected: _this.state.selected.filter(function (value) {
              return value !== index;
            })
          });
        }
      }

      if (_this.props.onClick) {
        _this.props.onClick(event, index);
      }
    });

    var _props$initialState = props.initialState,
        initialState = _props$initialState === void 0 ? {} : _props$initialState;
    var _initialState$selecte = initialState.selected,
        selected = _initialState$selecte === void 0 ? [] : _initialState$selecte;
    _this.state = {
      selected: isSelectedDefined(selected) ? [].concat(selected) : []
    };
    return _this;
  }

  _createClass(StatefulContainer, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          initialState = _this$props.initialState,
          stateReducer = _this$props.stateReducer,
          props = _objectWithoutProperties(_this$props, ["initialState", "stateReducer"]);

      return this.props.children(_objectSpread2({}, props, {
        onClick: this.onClick,
        selected: this.state.selected
      }));
    }
  }]);

  return StatefulContainer;
}(React.Component);

exports.default = StatefulContainer;

_defineProperty(StatefulContainer, "defaultProps", {
  initialState: {
    selected: []
  },
  stateReducer: defaultStateReducer
});